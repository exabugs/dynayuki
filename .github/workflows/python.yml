name: python

on:
  push:
    tags:
      - "v*"

jobs:
  python:
    name: python
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: "x64"

      - name: Get Python version
        run: python -V

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run Python
        working-directory: src
        run: |
          python python-sample.py

      # tag → release
      # http://skawashima.com/blog/2019/12/github-actions-auto-release/
      # - name: Release
      #   run: |
      #     echo ${{ github.ref }}
      #     gh release create ${{ github.ref }}

      #     # Upload all tarballs in a directory as release assets
      #     # $ gh release create v1.2.3 ./dist/*.tgz

      # リリースノート生成
      # https://qiita.com/__snow_rabbit__/items/f6c216432a6c02d30857

      - name: JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11.0.x

      - name: Get Tag Version
        id: get-version
        run: echo "::set-output name=tagVersion::${GITHUB_REF##*/}"

      - name: Create Release Note
        id: create_relase_note
        run: |
          echo ${GITHUB_REPOSITORY}
          echo ${{steps.get-version.outputs.tagVersion}}

          wget -q -O github-changelog-generator.jar https://github.com/spring-io/github-changelog-generator/releases/download/v0.0.5/github-changelog-generator.jar
          chmod +x github-changelog-generator.jar
          java -jar github-changelog-generator.jar \
              --changelog.repository=${GITHUB_REPOSITORY} \
              --github.token=${{ secrets.GITHUB_TOKEN }} \
              ${{steps.get-version.outputs.tagVersion}} ./CHANGELOG.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.get-version.outputs.tagVersion}}
          release_name: Release ${{steps.get-version.outputs.tagVersion}}
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: false

      # GitHubへAssetをアップロード(今回はtarget/CHANGELOG.mdをアップロードする)
      - name: Create Release Asset
        run: |
          mkdir target
          mv CHANGELOG.md target/CHANGELOG.md
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/CHANGELOG.md
          asset_name: CHANGELOG.md
          asset_content_type: application/txt
